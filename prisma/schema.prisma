generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int           @id @default(autoincrement())
  nome         String
  matricula    String        @unique
  email        String?
  senha        String?
  saldo        Decimal       @default(0.00) @db.Decimal(10, 2)
  fotoUsuario  Bytes?
  dataRegistro DateTime      @default(now())
  role         Role

  cartoes      Cartao[]
  historicos   HistoricoTransacao[]
}

model Cartao {
  id            Int           @id @default(autoincrement())
  hashCartao    String        @unique 
  status        Status        @default(ATIVO)
  dataAtivacao  DateTime      @default(now())
  usuario       Usuario       @relation(fields: [idUsuario], references: [id])
  idUsuario     Int           

  acessos       Acesso[]
  bloqueios     BloqueioCartao[]
}

model HistoricoTransacao {
  id            Int          @id @default(autoincrement())
  tipoTransacao TipoTransacao
  valor         Decimal      @db.Decimal(10, 2)
  dataTransacao DateTime     @default(now())
  usuario       Usuario      @relation(fields: [idUsuario], references: [id])
  idUsuario     Int
}

model Acesso {
  id          Int         @id @default(autoincrement())
  dataAcesso  DateTime    @default(now())
  permitido   Boolean     @default(true)
  cartao      Cartao      @relation(fields: [idCartao], references: [id])
  idCartao    Int
  observacao  String?
}

model BloqueioCartao {
  id              Int        @id @default(autoincrement())
  motivoBloqueio  String?
  dataBloqueio    DateTime   @default(now())
  cartao          Cartao     @relation(fields: [idCartao], references: [id])
  idCartao        Int
  temporario      Boolean    @default(false)
}

enum Role {
  ADMIN
  FUNCIONARIO
  ALUNO
}

enum Status {
  ATIVO
  BLOQUEADO
}

enum TipoTransacao {
  DEPOSITO
  REFEICAO
}
