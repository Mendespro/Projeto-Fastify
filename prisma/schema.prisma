generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int                  @id @default(autoincrement())
  nome         String
  matricula    String               @unique
  email        String?
  senha        String
  saldo        Decimal              @default(0.00) @db.Decimal(10, 2)
  fotoUsuario  Bytes?
  dataRegistro DateTime             @default(now())
  cartoes      Cartao[]
  historicos   HistoricoTransacao[]
}

model Cartao {
  id           Int              @id @default(autoincrement())
  numeroCartao String           @unique
  hashCartao   String           @unique
  status       Status           @default(ATIVO)
  dataAtivacao DateTime         @default(now())
  idUsuario    Int
  acessos      Acesso[]
  bloqueios    BloqueioCartao[]
  usuario      Usuario          @relation(fields: [idUsuario], references: [id])
}

model HistoricoTransacao {
  id            Int           @id @default(autoincrement())
  tipoTransacao TipoTransacao
  valor         Decimal       @db.Decimal(10, 2)
  dataTransacao DateTime      @default(now())
  idUsuario     Int
  usuario       Usuario       @relation(fields: [idUsuario], references: [id])
}

model Acesso {
  id         Int      @id @default(autoincrement())
  dataAcesso DateTime @default(now())
  permitido  Boolean  @default(true)
  idCartao   Int
  observacao String?
  cartao     Cartao   @relation(fields: [idCartao], references: [id])
}

model BloqueioCartao {
  id             Int      @id @default(autoincrement())
  motivoBloqueio String?
  dataBloqueio   DateTime @default(now())
  idCartao       Int
  temporario     Boolean  @default(false)
  cartao         Cartao   @relation(fields: [idCartao], references: [id])
}

enum Status {
  ATIVO
  BLOQUEADO
}

enum TipoTransacao {
  DEPOSITO
  REFEICAO
}
